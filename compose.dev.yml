services:
    cloth-application_next:
        container_name: cloth-application_next
        build:
            context: ./
            dockerfile: ./dev.Dockerfile

        environment:
            ENV_VARIABLE: ${ENV_VARIABLE}
            NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}

        env_file:
            - .env
        # volumes:
            # - .:/app
            # - ./public:/app/public
            # - ./components:/app/components
            # - ./actions:/app/actions
            # - ./context:/app/context
            # - ./hooks:/app/hooks
            # - ./lib:/app/lib
            # - ./prisma:/app/prisma
            # - ./generated:/app/generated
        restart: always
        ports:
            - 3000:3000
        networks:
            - app-network
        depends_on:
            - postgres
        develop:
            watch:
                - action: sync
                  path: .
                  target: /app
                  ignore:
                    - node_modules/
    studio:
        image: oven/bun:1
        container_name: cloth-application_studio
        working_dir: /app
        volumes:
            - .:/app
        ports:
            - '5555:5555'
        env_file:
            - .env
        command: sh -c "bun install --save-dev prisma && bunx prisma generate && bunx prisma studio --hostname 0.0.0.0 --port 5555"
        networks:
            - app-network
        depends_on:
            - postgres

    postgres:
        image: postgres:15
        container_name: cloth-application_postgres
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: maindb
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - app-network

networks:
    app-network:
        external: false

volumes:
    postgres_data:
